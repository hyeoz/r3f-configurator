// @ts-nocheck
import React, { useRef } from "react";
import {
  AccumulativeShadows,
  Center,
  Environment,
  OrbitControls,
  RandomizedLight,
  useGLTF,
} from "@react-three/drei";
import { Canvas, useFrame } from "@react-three/fiber";
import { easing } from "maath";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
useGLTF.preload("/shirt_baked.glb");

export const App = ({
  position = [-1, 0, 2.5],
  fov = 25,
}: {
  position?: number[];
  fov?: number;
}) => {
  return (
    <Canvas
      camera={{ position, fov }}
      eventSource={document.getElementById("root")!}
      eventPrefix="client"
      shadows
    >
      <ambientLight intensity={0.8} />
      <Environment preset="city" />
      <CameraRig>
        <Center>
          <Shirt />
          <BackDrop />
        </Center>
      </CameraRig>
      {/* <OrbitControls /> */}
    </Canvas>
  );
};

const Shirt = (props: any) => {
  const { nodes, materials } = useGLTF("./shirt_baked.glb");

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.T_Shirt_male.geometry}
        material={materials.lambert1}
        position={[0.419, 0, 0]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
};

const BackDrop = () => {
  return (
    <AccumulativeShadows
      temporal
      frames={60}
      alphaTest={0.85}
      scale={10}
      rotation={[Math.PI / 2, 0, 0]}
      position={[0, 0, -0.14]}
    >
      <RandomizedLight
        amount={4}
        radius={9}
        intensity={0.8}
        ambient={0.25}
        position={[5, 5, -10]}
      />
    </AccumulativeShadows>
  );
};

const CameraRig = ({ children }) => {
  const groupRef = useRef();

  // 마우스 클릭이 아닌 포인터 위치로 카메라 조정 가능
  useFrame((state, delta) => {
    easing.dampE(
      groupRef.current.rotation,
      [state.pointer.y / 10, -state.pointer.x / 5, 0],
      0.25,
      delta
    );
  });

  return <group ref={groupRef}>{children}</group>;
};
